plugins {
    id "io.spring.dependency-management" version "1.0.6.RELEASE"
    id "com.github.johnrengelman.shadow" version "4.0.2"
    id "application"
    id "java"
    id "net.ltgt.apt-eclipse" version "0.21"
    id "net.ltgt.apt-idea" version "0.21"
}

apply from: "$rootDir/gradle/versioning.gradle"

group "ch.so.agi.ili2gpkg"

repositories {
    mavenCentral()
    maven { url "https://jcenter.bintray.com" }
    maven { url "http://jars.interlis.ch/" }    
}

dependencyManagement {
    imports {
        mavenBom 'io.micronaut:micronaut-bom:1.1.2'
    }
}

configurations {
    developmentOnly 
}

dependencies {
    annotationProcessor "io.micronaut:micronaut-graal"
    annotationProcessor "io.micronaut:micronaut-inject-java"
    annotationProcessor "io.micronaut:micronaut-validation"
    compile "io.micronaut:micronaut-http-client"
    compile "io.micronaut:micronaut-inject"
    compile "io.micronaut:micronaut-validation"
    compile "io.micronaut:micronaut-runtime"
    compile "io.micronaut:micronaut-http-server-netty"
    compileOnly "com.oracle.substratevm:svm"
    developmentOnly "io.micronaut:micronaut-runtime-osx"
    runtime "ch.qos.logback:logback-classic:1.2.3"
    testAnnotationProcessor "io.micronaut:micronaut-inject-java"
    testCompile "org.junit.jupiter:junit-jupiter-api"
    testCompile "io.micronaut.test:micronaut-test-junit5"
    testRuntime "org.junit.jupiter:junit-jupiter-engine"
    
    compile "io.micronaut:micronaut-views"
    compile "org.thymeleaf:thymeleaf:3.0.11.RELEASE"    
    compile "ch.interlis:ili2gpkg:4.1.0"    
    compile "ch.ehi:ehibasics:1.2.0"
    compile "org.xerial:sqlite-jdbc:3.27.2.1"
}

test.classpath += configurations.developmentOnly

mainClassName = "ch.so.agi.ili2gpkg.Application"
// use JUnit 5 platform
test {
    useJUnitPlatform()
}

shadowJar {
    mergeServiceFiles()
}

run.classpath += configurations.developmentOnly
run.jvmArgs('-noverify', '-XX:TieredStopAtLevel=1', '-Dcom.sun.management.jmxremote', '-Dmicronaut.io.watch.restart=true', '-Dmicronaut.io.watch.paths=src/main')
tasks.withType(JavaCompile){
    options.encoding = "UTF-8"
    options.compilerArgs.add('-parameters')
}
